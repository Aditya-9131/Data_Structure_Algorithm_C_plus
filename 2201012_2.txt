#include <stdio.h>

void findLongestIncSubseq(int arr[], int a, int d){
    int Length[a];
    int prevInd[a];
    for (int i = 0; i < a; i++) {
        Length[i] = 1;
        prevInd[i] = -1;
    }

    for (int i = 1; i < a; i++) {
        for (int k = 0; k< i; k++) {
            if (arr[i] - arr[k] >= d && Length[i] < Length[k] + 1) {
                Length[i] = Length[k] + 1;
                prevInd[i] = k;
            }
        }
    }

    int maxLengIndx = 0;
    for (int i = 1; i < a; i++) {
        if (Length[i] > Length[maxLengIndx]) {
            maxLengIndx = i;
        }
    }

    int index = maxLengIndx;
    while (index != -1) {
        printf("%d ", arr[index]);
        index = prevInd[index];
    }
    printf("\n");
}

int main() {
    int arr[] = {-9, -5, 1, 3, 4, 6, -2};
    int a = sizeof(arr) / sizeof(arr[0]);

    int d2 = 2;
    printf(" d = %d, output is: ", d2);
    findLongestIncSubseq(arr, a, d2);

    int d3 = 3;
    printf(" d = %d, output is: ", d3);
    findLongestIncSubseq(arr, a, d3);

    int d4 = 4;
    printf(" d = %d, output is: ", d4);
    findLongestIncSubseq(arr, a, d4);

    return 0;
}

